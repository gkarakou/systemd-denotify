# This is the configuration file for systemd-denotify.
# An app that provides desktop and email notifications for user logins,
# failed services, the status of selected services and monitored files.
#
#
################################
# Desktop Notification Details #
################################
[Logins]
# whether to start notifying on user logins
# Takes a single boolean value
# either True or False
start = True

[JournalPatternMatcher]
# whether to start notifying upon journal messages that contain a specific phrase/phrases.
# Note that to start reading the journal for phrases/patterns your desktop user should be a member of the systemd-journal group.
# On some distros (fedora) this is achieved automagically from the installation
# process as described in README.md while on others(arch) you should take care of it yourself.

# Takes a single boolean value
# either True or False
start = True
# Takes a comma separated list of patterns or a single phrase you wish to search for eg(permission denied, entered failed state)
# Note that if you want to keep the previous functionality with notifying on failed systemd services you want the pattern below
patterns = entered failed state

[Files]
# whether to start notifying upon file alteration
# Takes a single boolean value
## either True or False
start= True
# Directories to watch (recursively)
# takes  a comma separated list of dirs or a single value
##Note you shouldn't have any empty spaces or whitespace between commas  (eg /etc/systemd,/usr/lib/systemd)
directories = /etc/systemd,/usr/lib/systemd
# Events to watch for
# You can be notified when a file in specified directories gets modified, deleted, written or when its
# attributes changed
# takes  a comma separated list of events or a single value (eg MODIFY)
# events = DELETE,WRITE,MODIFY,ATTRIBUTE
events = DELETE,WRITE,MODIFY

[ServicesStatus]
# whether to start notifying on the status of selected services
# equivalent to systemctl status systemd-journald
# Takes a single boolean value
# either True or False
start = True
# Interval between the notifications (in minutes)
# takes a single integer value
interval = 30
# which services to notify upon
# takes a comma separated list (you should ommit the .service part) or a single value (eg systemd-journald)
services = systemd-logind,systemd-journald

##################
## Mail Details ##
##################
[EMAIL_NOTIFICATIONS]

#  Whether to email on user logins
# Takes a single boolean value (True/False)
email_on_user_logins = False
#  Whether to email on failed services
# Takes a single boolean value (True/False)
email_on_failed_services = False
#  Whether to email upon file alteration
# Takes a single boolean value (True/False)
email_on_file_alteration = False
#  Whether to email on services statuses
# Takes a single boolean value (True/False)
email_on_services_statuses = False
#  Whether to email on journal pattern match
# Takes a single boolean value (True/False)
email_on_journal_pattern_match = False

[EMAIL]
#  Default subject. Eg: service failure in domain.example.con
# subject=systemd-denotify mail alert on example.com
subject=systemd-denotify email notification
# who is sending this (sender)?
# mail_from=someone@example.com
mail_from=
# to whom it is send (recipient)?
# mail_to=another@example.com
mail_to=

#####################
# Mail auth details #
#####################
[AUTH]
# whether to authenticate against the mail server
# Takes a single value (True/False)
# active=True
active=False
# the username eg root or root@domain.com. The latter depends on the mail servers configuration and whether it appends the domain part(realm) to the user
# auth_user=root
auth_user=
# the password for this user
auth_password=

############################
# Mail smtp server details #
############################
[SMTP]
# whether to start a simple unencrypted smtp session
# Takes a single value (True/False)
active=True
#  The host to connect to eg host=domain.example.com
#  if nothing specified defaults to localhost
host=localhost
#  port to connect to eg port=25
# Takes a single value: the port number
# It must be set, it is a mandatory field, never leave it blank.
port=25

####################
# Mail ssl details #
####################
[SMTPS]
# whether to start an ssl smtp session
# Takes a single boolean value (True/False)
# active=False
active=False
#  The host to connect to eg host=domain.example.com
#  if nothing specified defaults to localhost
host=localhost
# port to connect to eg port=465
# Takes a single value: the port number
# It must be set, it is a mandatory field, never leave it blank.
port=465
# The certificate file for the clients
# if you have a certificate  give the absolute path here
# NOTE: if your mails are not delivered and you get an SSLError in journal from systemd-mailify you have to adjust(relax) the file permissions
# cert_file=/path/to/client/cert.pem
cert_file=
# The key file for the clients
# if you have a key file give the absolute path here
# NOTE: if your mails are not delivered and you get an SSLError in journal from systemd-mailify you have to adjust(relax) the file permissions
# key_file=/path/to/client/key.pem
key_file=

####################
# Mail tls details #
####################
[STARTTLS]
# whether to start a tls smtp session
# Takes a single boolean value (True/False)
# active=True
active=False
#  The host to connect to eg host=domain.example.com
#  if nothing specified defaults to localhost
# host=mail.example.com
host=
#  port to connect to eg port=587
# Takes a single value: the port number
# It must be set, it is a mandatory field, never leave it blank.
port=587
# The certificate file for the clients
# if you have a certificate  give the absolute path here
# NOTE: if your mails are not delivered and you get an SSLError in journal from systemd-mailify you have to adjust(relax) the file permissions
# cert_file=/path/to/client/cert.pem
cert_file=
# The key file for the clients
# if you have a key file give the absolute path here
# NOTE: if your mails are not delivered and you get an SSLError in journal from systemd-mailify you have to adjust(relax) the file permissions
# key_file=/path/to/client/key.pem
key_file=
